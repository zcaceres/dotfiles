- name: Set OSX Defaults
  shell: chflags nohidden ~/Library

- name: Set Key Repeat Part I
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: InitialKeyRepeat
    type: int
    value: 10
    state: present

- name: Set Key Repeat Part II
  community.general.osx_defaults:
    domain: NSGlobalDomain
    key: KeyRepeat
    type: int
    value: 1
    state: present

#  defaults write com.apple.screencaptureui "thumbnailExpiration" -float 30
- name: Set Screenshot Thumbnail Expiration
  community.general.osx_defaults:
    domain: com.apple.screencaptureui
    key: thumbnailExpiration
    type: float
    value: 15
    state: present

- name: Show Hidden Files OSX
  community.general.osx_defaults:
    domain: com.apple.finder
    key: AppleShowAllFiles
    type: string
    value: YES
    state: present

- name: Show Pathbar in Finder
  community.general.osx_defaults:
    domain: com.apple.finder
    key: ShowPathbar
    type: bool
    value: true
    state: present

- name: Enable Safari Dev Tools
  community.general.osx_defaults:
    domain: com.apple.Safari
    key: IncludeInternalDebugMenu
    type: int
    value: 1
    state: present

- name: Install XCode
  shell: xcode-select --install
  ignore_errors: true

- name: Install Rust
  shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/install_rust && /usr/bin/env bash /tmp/install_rust -y --no-modify-path

- name: Install Bun runtime
  shell: brew tap oven-sh/bun

- name: Homebrew Install Tools
  community.general.homebrew:
    name: cloc,bun,fzf,gh,npm,nvm,go,trash,awscli,ack,hub,redis,ffmpeg,git-filter-repo,imagemagick,wget,parallel,mas,figlet,nmap,pdfgrep,ocrmypdf,iftop,htop,mosh,pyenv,pandoc,jq,telnet,shellcheck,youtube-dl,watch,zsh,pipx,tree,fd,neovim,glow,tldr,deno,llm
    state: present

- name: Install Node with NVM
  shell: . $(brew --prefix nvm)/nvm.sh && nvm install node && nvm use node
  become: true

- name: (Bun) Install Global Dependencies
  shell: bun add -g carbon-now-cli netlify-cli neovim cowsay
  become: true

- name: Secure NPM
  shell: npm config set ignore-scripts true
  become: true

- name: Install Homebrew - Apps
  community.general.homebrew_cask:
    name: android-file-transfer,anki,arc,audacity,claude,chromium,dash,dbeaver-community,discord,docker,dropbox,figma,freedom,firefox,github,google-chrome,google-earth-pro,imageoptim,iterm2,monodraw,kindle,notion,ngrok,obs,obsidian,openoffice,pocket,postman,postico,playdate-mirror,private-internet-access,rescuetime,screen-studio,skype,slack,signal,sizzy,steam,telegram,visual-studio-code,whatsapp,warp
    state: present
  ignore_errors: true

- name: Install UV
  shell: curl -LsSf https://astral.sh/uv/install.sh | sh
  become: true

- name: Install Python with UV
  shell: uv install python
  become: true

- name: Install Deep Learning Tools
  shell: uv pip install csvkit
  become: true

- name: Copy Gitconfig
  copy:
    src: ./config/.gitconfig
    dest: ~/.gitconfig

- name: Copy Global Gitignore
  copy:
    src: ./config/.gitignore_global
    dest: ~/.gitignore_global

- name: Copy .vimrc
  copy:
    src: ./config/.vimrc
    dest: ~/.vimrc

- name: Copy .zshrc
  copy:
    src: ./config/.zshrc
    dest: ~/.zshrc

- name: Copy .zprofile
  copy:
    src: ./config/.zprofile
    dest: ~/.zprofile

- name: Copy ZED Prefs
  copy:
    src: "./zed/settings.json"
    dest: "~/.config/zed/settings.json"

- name: Copy VSCode Prefs Part I
  copy:
    src: ./files/vscode/keybindings.json
    dest: $HOME/Library/Application\ Support/Code/User/keybindings.json

- name: Copy VSCode Prefs Part II
  copy:
    src: ./files/vscode/settings.json
    dest: $HOME/Library/Application\ Support/Code/User/settings.json

- name: Install VSCode Extensions
  shell: cat ~/dotfiles/ansible-osx/roles/development/files/vscode/vs-code-extensions | xargs -I _ code --install-extension _

- name: Install Cargo Deps
  shell: source $HOME/.cargo/env && cargo install ripgrep git-delta fd-find exa procs bottom tealdeer hyperfine du-dust grex sd
  become: true

- name: Update TLDR Cache
  shell: tldr --update

- name: Install browserslist
  shell: bunx browserslist && bunx update-browserslist-db@latest
